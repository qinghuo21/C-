解题思路
先要明白栈有后进先出的特点，而队列是先进先出。
利用双栈是先使用s1进行存储,当需要进行出队操作时:
A:如果s1 s2都为空则返回-1。
B:如果s2不为空则使用s2.top()输出栈顶元素，
C:如果s1不为空则将s1现有所有的元素push到s2,并使用B方案。
这样保证了先进先出的原则。

代码

class CQueue {
public:
	stack<int> s1;
	stack<int> s2;
	CQueue() {
		while (!s1.empty()) 
		{
			s1.pop();
		}
		while (!s2.empty())
		{
			s2.pop();
		}
	}

	void appendTail(int value) {
		s1.push(value);
	}

	int deleteHead() {
		if (s1.empty() && s2.empty())
			return -1;
		else if (!s2.empty());
		else {
			while (!s1.empty())
			{
				s2.push(s1.top());
				s1.pop();
			}
		}
		int temp = s2.top();
		s2.pop();
		return temp;
	}
};

/**
 * Your CQueue object will be instantiated and called as such:
 * CQueue* obj = new CQueue();
 * obj->appendTail(value);
 * int param_2 = obj->deleteHead();
 */

作者：qing-huo-3
链接：https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/solution/shuang-zhan-by-qing-huo-3-ckwi/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
